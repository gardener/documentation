#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

# For the integration-test step the following environment variables are used:
# GIT_OAUTH_TOKEN - used for fetch the content from Github
# MANIFEST_ORG - used to replace the manifest org to this one. If does not exist, the script will try to get the org from .ci/userlogin
# MANIFEST_VERSION - used to replace the manifest version to this one. If does not exist, the script will try to get the version from .ci/branch
set -eu

if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

getGitHubToken() {
  # Check if gardener-ci is available (in local setup)
  command -v gardener-ci >/dev/null && gardenci="true" || gardenci=""
  if [[ $gardenci == "true" ]]; then
    # Get a (round-robin) random technical GitHub user credentials
    technicalUser=$(gardener-ci config model_element --cfg-type github --cfg-name "${1}" --key credentials | sed -e "s/^GithubCredentials //" -e "s/'/\"/g")
    if [[ -n "${technicalUser}" ]]; then
      # get auth token and strip lead/trail quotes
      authToken=$(sed -e 's/"//g' <<<$(jq -n '$c.authToken' --argjson c "$technicalUser"))
      # get username and strip lead/trail quotes
      username=$(sed -e 's/"//g' <<<$(jq -n '$c.username' --argjson c "$technicalUser"))
      echo "${username}:${authToken}"
    fi
  fi
}

repoPath="$(${READLINK_BIN} -f $(dirname ${0})/..)"
manifestPath="${repoPath}/.docforge/website.yaml"
configPath="${repoPath}/.ci/check-manifest-config"

GIT_OAUTH_TOKEN=${GIT_OAUTH_TOKEN:-$(getGitHubToken github_com)}
test $GIT_OAUTH_TOKEN

org=""
mainBranch=""

if [[ ! -z "${MANIFEST_ORG}" ]] && [[ ! -z "${MANIFEST_VERSION}" ]]; then
  echo "Retrieving org and mainBranch from env vars"
  org=${MANIFEST_ORG}
  mainBranch=${MANIFEST_VERSION}
elif [[ -f "${docforge_repo_path}/.git/userlogin" ]] && [[ -f "${docforge_repo_path}/.git/branch" ]]; then
  echo "Retrieving org and mainBranch from ${docforge_repo_path}/.git"
  org=$(cat "${docforge_repo_path}/.git/userlogin")
  mainBranch=$(cat "${docforge_repo_path}/.git/branch")
else
  echo "Using default org and mainBranch"
  org="gardener"
  mainBranch="master"
fi

echo "Manifest org: ${org}"
echo "Manifest mainBranch: ${mainBranch}"

if [[ -z "${org}" ]] || [[ -z "${mainBranch}" ]]; then
  exit 1
fi

tmpConfigPath="tmp-config"
sed -e "s/PR_BRANCH/${mainBranch}/g" ${configPath} > ${tmpConfigPath}
export DOCFORGECONFIG=${tmpConfigPath}

echo "Running docforge command..."
docforge \
  -f ${manifestPath} \
  -d tmp \
  --github-oauth-token $GIT_OAUTH_TOKEN \
  --hugo \
  --use-git=true \
  --variables "org=${org}" \
  --dry-run

rm -rf ${tmpConfigPath}